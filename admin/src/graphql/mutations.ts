import { gql } from '@apollo/client'

export const CREATE_PRODUCT = gql`
  mutation CreateProduct($input: CreateProductInput!) {
    createProduct(input: $input) {
      id
      name
      slug
      description
      createdAt
      createdBy
      updatedAt
      updatedBy
      autoGenerated
      isPrivate
      facetValues {
        id
        code
        name
      }
    }
  }
`

export const UPDATE_PRODUCT = gql`
  mutation UpdateProduct($id: String!, $input: UpdateProductInput!) {
    updateProduct(input: $input, id: $id) {
      id
      name
      slug
      description
      autoGenerated
      isPrivate
      facetValues {
        id
        code
        name
      }
    }
  }
`

export const CREATE_FACET = gql`
  mutation CreateFacet($input: CreateFacetInput!) {
    createFacet(input: $input) {
      id
      name
      code
      isPrivate
    }
  }
`

export const UPDATE_FACET = gql`
  mutation UpdateFacet($input: UpdateFacetInput!) {
    updateFacet(input: $input) {
      id
      name
      code
      isPrivate
    }
  }
`

export const DELETE_FACET = gql`
  mutation DeleteFacet($input: DeleteFacetInput!) {
    deleteFacet(input: $input) {
      id
      name
      code
    }
  }
`

export const DELETE_FACET_LIST = gql`
  mutation DeleteFacetList($ids: [ID!]!) {
    deleteFacetList(ids: $ids)
  }
`

export const CREATE_FACET_VALUE = gql`
  mutation CreateFacetValue($input: CreateFacetValueInput!) {
    createFacetValue(input: $input) {
      id
      name
      code
    }
  }
`
export const UPDATE_FACET_VALUE = gql`
  mutation UpdateFacetValue($input: UpdateFacetValueInput!) {
    updateFacetValue(input: $input) {
      id
      name
      code
    }
  }
`

export const DELETE_FACET_VALUE = gql`
  mutation DeleteFacetValue($id: ID!) {
    deleteFacetValue(id: $id) {
      id
      name
      code
    }
  }
`

export const CREATE_COLLECTION = gql`
  mutation CreateCollection($input: CreateCollectionInput!) {
    createCollection(input: $input) {
      id
      name
      slug
      description
      isDynamic
      isPrivate
    }
  }
`

export const UPDATE_COLLECTION = gql`
  mutation UpdateCollection($id: String!, $input: UpdateCollectionInput!) {
    updateCollection(id: $id, input: $input) {
      id
      name
      slug
      description
      isDynamic
      isPrivate
    }
  }
`
export const EDIT_PARENT_COLLECTION = gql`
  mutation EditParentCollection($id: String!, $parentId: String) {
    editParentCollection(id: $id, parentId: $parentId) {
      id
      name
      slug
      parentId
    }
  }
`
export const DELETE_COLLECTION = gql`
  mutation DeleteCollection($id: String!) {
    deleteCollection(id: $id) {
      id
      name
      slug
      description
      isDynamic
      isPrivate
    }
  }
`

export const CREATE_CHANNEL = gql`
  mutation CreateChannel($input: CreateChannelInput!) {
    createChannel(input: $input) {
      id
      code
      isDefault
      name
      currencyCode
      defaultLanguageCode
      token
      type
      updatedAt
      createdAt
      createdBy
    }
  }
`

export const UPDATE_CHANNEL = gql`
  mutation UpdateChannel($id: Int!, $input: UpdateChannelInput!) {
    updateChannel(id: $id, input: $input) {
      id
      code
      isDefault
      name
      currencyCode
      defaultLanguageCode
      token
      type
      updatedAt
      createdAt
      createdBy
    }
  }
`

export const DELETE_CHANNEL = gql`
  mutation DeleteChannel($id: ID!) {
    deleteChannel(id: $id) {
      id
    }
  }
`

export const AUTHENTICATE_USER = gql`
  mutation AuthenticateUser($input: LoginUserDto!) {
    authenticateUser(input: $input) {
      token
    }
  }
`
