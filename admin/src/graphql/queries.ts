import { gql } from '@apollo/client'

export const GET_PRODUCTS = gql`
  query GetProducts($pagination: PaginationInput) {
    products(pagination: $pagination) {
      items {
        id
        name
        slug
        description
        createdAt
        createdBy
        updatedAt
        updatedBy
        facetValues {
          id
          code
          name
        }
      }
      pagination {
        skip
        take
        total
      }
    }
  }
`

export const SEARCH_PRODUCTS = gql`
  query SearchProducts($query: String!, $skip: Int, $take: Int) {
    searchProducts(query: $query, skip: $skip, take: $take) {
      items {
        id
        name
        slug
        description
        createdAt
        createdBy
        updatedAt
        updatedBy
        facetValues {
          id
          code
          name
        }
      }
      pagination {
        skip
        take
        total
      }
    }
  }
`

export const SEARCH_FACETS = gql`
  query SearchFacets($query: String!, $skip: Int, $take: Int) {
    searchFacets(query: $query, skip: $skip, take: $take) {
      items {
        id
        name
        code
        isPrivate
        values {
          id
          name
          code
        }
      }
      pagination {
        skip
        take
      }
    }
  }
`

export const SEARCH_FACET_VALUES = gql`
  query SearchFacetValues($query: String!, $skip: Int, $take: Int) {
    searchFacetValues(query: $query, skip: $skip, take: $take) {
      items {
        id
        name
        code
        facet {
          id
          name
          code
        }
      }
      pagination {
        skip
        take
      }
    }
  }
`

export const GET_PRODUCT_BY_SLUG = gql`
  query GetProductBySlug($slug: String!) {
    productBySlug(slug: $slug) {
      id
      name
      slug
      description
      autoGenerated
      featuredAssetId
      documents {
        id
        name
        originalName
        preview
        source
        type
        autoGenerated
      }
      featuredAsset {
        id
        name
        originalName
        preview
        source
        type
        autoGenerated
      }
      isPrivate
      createdAt
      createdBy
      updatedAt
      updatedBy
      facetValues {
        id
        code
        name
      }
    }
  }
`

export const GET_PRODUCT_BY_ID = gql`
  query GetProductById($id: String!) {
    product(id: $id) {
      id
      name
      slug
      featuredAssetId
      featuredAsset {
        id
        name
        originalName
        preview
        source
        type
        autoGenerated
      }
      documents {
        id
        name
        originalName
        preview
        source
        type
        autoGenerated
      }
      seoMetadata {
        id
        title
        description
        keywords
        name
        path
        canonicalUrl
        ogTitle
        ogDescription
        ogImage
        robots
        schemaMarkup
        hreflang
        pageType
        priority
        changefreq
        alternates
      }
      description
      createdAt
      createdBy
      updatedAt
      updatedBy
      facetValues {
        id
        code
        name
      }
    }
  }
`

export const GET_FACETS = gql`
  query GetFacets {
    facets {
      items {
        id
        name
        code
        isPrivate
        values {
          id
          name
          code
        }
      }
      pagination {
        skip
        take
      }
    }
  }
`

export const GET_FACET = gql`
  query GetFacet($input: ID!) {
    facet(id: $input) {
      id
      name
      code
      isPrivate
      values {
        id
        name
        code
      }
    }
  }
`

export const GET_FACET_VALUES = gql`
  query GetFacetValues($input: GetFacetValuesInput!) {
    facetValues(input: $input) {
      items {
        id
        name
        code
      }
      pagination {
        skip
        take
        total
      }
    }
  }
`

export const GET_FACET_VALUE = gql`
  query GetFacetValue($input: GetFacetValueInput!) {
    facetValue(input: $input) {
      id
      name
      code
    }
  }
`

export const GET_COLLECTIONS = gql`
  query GetCollections($skip: Int, $take: Int, $parentId: String) {
    collections(pagination: { skip: $skip, take: $take }, parentId: $parentId) {
      items {
        id
        name
        slug
        description
        autoGenerated
        channelToken
        isDynamic
        isPrivate
        updatedAt
        updatedBy
        createdAt
        createdBy
        rules {
          code
          args {
            name
            value
          }
        }
      }
      pagination {
        skip
        take
      }
    }
  }
`

export const GET_COLLECTION = gql`
  query GetCollection($id: String!) {
    collection(id: $id) {
      id
      name
      slug
      description
      autoGenerated
      channelToken
      isDynamic
      isPrivate
      featuredAssetId
      featuredAsset {
        id
        name
        originalName
        preview
        source
        type
        autoGenerated
      }
      documents {
        id
        name
        originalName
        preview
        source
        type
        autoGenerated
      }
      seoMetadata {
        id
        title
        description
        keywords
        name
        path
        canonicalUrl
        ogTitle
        ogDescription
        ogImage
        robots
        schemaMarkup
        hreflang
        pageType
        priority
        changefreq
        alternates
      }
      updatedAt
      updatedBy
      createdAt
      createdBy
      rules {
        code
        args {
          name
          value
        }
      }
    }
  }
`

export const GET_CHANNELS = gql`
  query GetChannels {
    channels {
      id
      code
      isDefault
      name
      token
      type
      currencyCode
      defaultLanguageCode
      createdAt
      updatedAt
    }
  }
`

export const GET_CHANNEL = gql`
  query GetChannel($id: Int!) {
    channel(id: $id) {
      id
      code
      isDefault
      name
      token
      type
      currencyCode
      defaultLanguageCode
      createdAt
      updatedAt
    }
  }
`

export const GET_NAVBAR = gql`
  query GetNavbar {
    getUserAccessUI {
      navbarItems {
        children {
          label
          permission
          route
        }
        label
        permission
      }
    }
  }
`
export const GET_ACTIVE_USER = gql`
  query GetActiveUser {
    activeUser {
      id
      email
      isActive
      updatedAt
      updatedBy
      createdAt
      createdBy
      deletedAt
      deletedBy
    }
  }
`
