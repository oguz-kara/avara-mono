model Facet {
    id            String  @id @default(uuid())
    name          String
    code          String  @unique
    isPrivate     Boolean @default(false)
    channelToken  String
    autoGenerated Boolean @default(false)

    values FacetValue[] @relation("FacetValues")

    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    createdBy String?
    updatedBy String?
    deletedAt DateTime?
    deletedBy String?
}

model FacetValue {
    id      String @id @default(uuid())
    facetId String

    name          String
    code          String
    channelToken  String
    autoGenerated Boolean @default(false)

    facet    Facet     @relation("FacetValues", fields: [facetId], references: [id], onDelete: Cascade)
    products Product[] @relation("ProductFacetValues")

    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    createdBy String?
    updatedBy String?
    deletedAt DateTime?
    deletedBy String?

    @@unique([facetId, name])
    @@unique([facetId, code])
}

model Product {
    id              String  @id @default(uuid())
    featuredAssetId String?
    seoMetadataId   String? @unique

    name          String
    slug          String?
    description   String?
    isPrivate     Boolean @default(true)
    channelToken  String
    autoGenerated Boolean @default(false)

    featuredAsset Asset?       @relation(name: "ProductFeaturedImage", fields: [featuredAssetId], references: [id])
    documents     Asset[]      @relation("ProductDocuments")
    facetValues   FacetValue[] @relation("ProductFacetValues")

    seoMetadata SeoMetadata? @relation(fields: [seoMetadataId], references: [id], onDelete: Cascade, onUpdate: Cascade)

    createdAt DateTime? @default(now())
    updatedAt DateTime? @updatedAt
    updatedBy String?
    createdBy String?
    deletedAt DateTime?
    deletedBy String?
}

model Collection {
    id              String  @id @default(uuid())
    seoMetadataId   String? @unique
    parentId        String?
    featuredAssetId String? @unique

    name          String  @unique
    slug          String? @unique
    description   String?
    channelToken  String
    autoGenerated Boolean @default(false)
    isPrivate     Boolean @default(false)

    isDynamic Boolean @default(false)

    rules Json?

    featuredAsset Asset?       @relation("CollectionFeaturedImage", fields: [featuredAssetId], references: [id])
    documents     Asset[]      @relation("CollectionDocuments")
    seoMetadata   SeoMetadata? @relation(fields: [seoMetadataId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    parent        Collection?  @relation("CollectionHierarchy", fields: [parentId], references: [id])
    children      Collection[] @relation("CollectionHierarchy")

    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    createdBy String?
    updatedBy String?
    deletedAt DateTime?
    deletedBy String?
}
